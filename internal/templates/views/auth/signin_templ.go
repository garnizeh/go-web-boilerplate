// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package viewauth

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Signin() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section class=\"bg-white dark:bg-dark-2 flex flex-wrap min-h-[100vh]\"><div class=\"lg:w-1/2 lg:block hidden\"><div class=\"flex items-center flex-col h-full justify-center\"><img src=\"/static/img/auth/auth-img.png\" alt=\"\"></div></div><div class=\"lg:w-1/2 py-8 px-6 flex flex-col justify-center\"><div class=\"lg:max-w-[464px] mx-auto w-full\"><div class=\"text-center\"><a href=\"index.html\" class=\"mb-2.5 max-w-[290px]\"><img src=\"/static/img/banner.png\" alt=\"\"></a><h4 class=\"mb-3\">Sign In to your Account</h4><p class=\"mb-8 text-secondary-light text-lg\">Welcome back! please enter your detail</p></div><form action=\"sign-in\" method=\"post\"><div class=\"icon-field mb-4 relative\"><span class=\"absolute start-4 top-1/2 -translate-y-1/2 pointer-events-none flex text-xl\"><iconify-icon icon=\"mage:email\"></iconify-icon></span> <input type=\"email\" class=\"form-control h-[56px] ps-11 border-neutral-300 bg-neutral-50 dark:bg-dark-2 rounded-xl\" name=\"name\" id=\"name\" placeholder=\"john.doe@example.com\" required autocomplete=\"email\" autofocus></div><div class=\"relative mb-5\"><div class=\"icon-field\"><span class=\"absolute start-4 top-1/2 -translate-y-1/2 pointer-events-none flex text-xl\"><iconify-icon icon=\"solar:lock-password-outline\"></iconify-icon></span> <input type=\"password\" class=\"form-control h-[56px] ps-11 border-neutral-300 bg-neutral-50 dark:bg-dark-2 rounded-xl\" name=\"password\" id=\"your-password\" placeholder=\"secret\" required></div><span class=\"toggle-password ri-eye-line cursor-pointer absolute end-0 top-1/2 -translate-y-1/2 me-4 text-secondary-light\" data-toggle=\"#your-password\"></span></div><div class=\"mt-7\"><div class=\"flex justify-between gap-2\"><div class=\"flex items-center\"><input class=\"form-check-input border border-neutral-300\" type=\"checkbox\" value=\"\" id=\"remeber\"> <label class=\"ps-2\" for=\"remeber\">Remember me </label></div><a href=\"forgot-password\" class=\"text-primary-600 font-medium hover:underline\">Forgot Password?</a></div></div><button type=\"submit\" class=\"btn btn-primary justify-center text-sm btn-sm px-3 py-4 w-full rounded-xl mt-8\">Sign In</button><div class=\"mt-8 text-center text-sm\"><p class=\"mb-0\">Don't have an account? <a href=\"sign-up\" class=\"text-primary-600 font-semibold hover:underline\">Sign Up</a></p></div></form></div></div></section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = scriptLogin().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func scriptLogin() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<script>\n  // ================== Password Show Hide Js Start ==========\n  function initializePasswordToggle(toggleSelector) {\n    const icon = document.getElementsByClassName(toggleSelector)[0];\n    let password = document.getElementById('your-password');\n\n    icon.addEventListener('click', function() {\n      if (password.type == \"password\") {\n        password.type = \"text\";\n        icon.classList.add(\"ri-eye-off-line\");\n        icon.classList.remove(\"ri-eye-line\");\n      } else {\n        password.type = \"password\";\n        icon.classList.add(\"ri-eye-line\");\n        icon.classList.remove(\"ri-eye-off-line\");\n      }\n    });\n  }\n\n  // Call the function\n  initializePasswordToggle('toggle-password');\n  // ========================= Password Show Hide Js End ===========================\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
